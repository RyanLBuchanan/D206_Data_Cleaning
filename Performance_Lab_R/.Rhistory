56 > 129
---
title: "Introduction to R Syntax"
output: html_notebook
---
```{r}
message <- 'Should I pack an umbrella?'
weather <- 'cloudy'
high_chance_of_rain <- TRUE
if (weather == 'cloudy' & high_chance_of_rain){
message <- "Pack umbrella!"
} else {
message <- "No need for umbrella"
}
print(message)
41/247
1600/360
.4*360
setwd("C:/Users/vreed/Desktop/Ryan/AIEngineer/WGU/MSDA/D206_Data_Cleaning/Performance_Lab_R")
df <- read.csv('Boston_housing_data.csv')
df <- df %>% mutate(locationdistrict = ifelse(locationdistrict=="") | (is.na(locationdistrict)),substr(locationzone,1,1), locationdistrict)
df %>% select(locationzone, locationdistrict)
df <- read.csv('Boston_housing_data.csv')
df <- df %>% mutate(locationdistrict = ifelse((locationdistrict=="") | (is.na(locationdistrict)),substr(locationzone,1,1), locationdistrict)
df %>% select(locationzone, locationdistrict)
df <- read.csv('Boston_housing_data.csv')
# df <- df %>% mutate(locationdistrict = ifelse((locationdistrict=="") | (is.na(locationdistrict)),substr(locationzone,1,1), locationdistrict)
# df %>% select(locationzone, locationdistrict)
df <- df %>% mutate(locationdistrict = ifelse((locationdistrict=="") | (is.na(locationdistrict)), substr(locationzone,1,1), locationdistrict))
df %>% select(locationzone, locationdistrict)
df <- read.csv('Boston_housing_data.csv')
df <- df %>% mutate(locationdistrict = ifelse((locationdistrict=="") | (is.na(locationdistrict)),substr(locationzone,1,1), locationdistrict))
df %>% select(locationzone, locationdistrict)
df <- read.csv("boston_housing_data.csv")
df
# Displaying the number of rows and columns:
# Write code to display the number of rows and columns in the dataframe stored as df.
dim(df)
#Displaying the column names: Write code to display the column names in the dataframe stored as df.
colnames(df)
# Displaying mean, count, min, and max: Write code to display the mean, count, min, and max of all the numeric data using a single line of code in the dataframe stored as df.
summary(df)
#Displaying the variable type: Write code to display the structure, including each column name, its type, and its first couple of values, in the dataframe stored as df.
str(df)
# Displaying unique values: Write code to display unique values in the locationzone column in the dataframe stored as df.
unique(df$'locationzone')
# Write code to display the unique values in the locationzone column and the number of times each value appears in the dataframe stored as df.
df %>% count(locationzone) %>% arrange(desc(n))
# The base R function to read in a CSV file is read.csv(). You will also see read_csv() used, but that function belongs to the Tidyverse library. Using head() with default arguments displays the first 6 rows of data. To display different row amounts, you can add an integer to the head() function. For example head(df,10) to display the first 10 rows.
df <- read.csv("boston_housing_data_clean.csv")
head(df)
# Write code that displays any duplicate rows in the dataframe stored as df.
df[duplicated(df),]
# Write code that displays how many missing values are in each column in the dataframe stored as df.
sapply(df, function(x) sum (is.na(x)))
df <- read.csv("boston_housing_data_clean.csv")
df2 <- df %>% filter(date_appraised == '2016-03-27')
tbl <- df2 %>% group_by(locationdistrict) %>% summarise(mean=mean(medv, na.rm = TRUE), .groups = 'drop')
tbl
# Write code that displays the mean value of the medv column per district on March 27, 2016. To do this, limit the dataset to observations that were appraised on March 27, 2016, and create a datasheet that aggregates all the data by the locationdistrict column and displays the mean of medv rounded off to one decimal place.
df <- read.csv("boston_housing_data_clean.csv")
df2 <- df %>% filter(date_appraised == '2016-03-27')
# Write code to display the unique values in the locationzone column and the number of times each value appears in the dataframe stored as df.
df %>% count(locationzone) %>% arrange(desc(n))
# Displaying unique values: Write code to display unique values in the locationzone column in the dataframe stored as df.
unique(df$'locationzone')
# Write code to display the unique values in the locationzone column and the number of times each value appears in the dataframe stored as df.
df %>% count(locationzone) %>% arrange(desc(n))
# Load a packages (like magrittr or dplyr) that defines the function
install.packages("magrittr") # package installations are only needed the first time you use it
install.packages("dplyr")    # alternative installation of the %>%
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
# Imputing the missing values
# Question 24 :
#   There are missing values in the locationdistrict column. Redefine all missing values (either N/A or blank)  in locationdistrict to be the first character in the locationzone column.
df <- read.csv('Boston_housing_data.csv')
df <- df %>% mutate(locationdistrict = ifelse((locationdistrict=="") | (is.na(locationdistrict)),substr(locationzone,1,1), locationdistrict))
df %>% select(locationzone, locationdistrict)
df <- read.csv('Boston_housing_data.csv')
df2 <- df %>% filter (locationdistrict %in% c('H', 'J', 'N')) %>% select(locationzone, date_appraised, medv)
df <- read.csv('Boston_housing_data.csv')
df2 <- df %>% filter(locationdistrict %in% c('H', 'J', 'N')) %>% select(locationzone, date_appraised, medv)
df <- read.csv('Boston_housing_data.csv')
df2 <- df %>% filter(locationdistrict %in% c('H', 'J', 'N')) %>% select(locationzone, locationdistrict, date_appraised, medv)
